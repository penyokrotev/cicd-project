name: Pull request
on:
  pull_request:
    branches: [ master ]
jobs:
  checkstyle_job:
    runs-on: ubuntu-latest
    name: Checkstyle job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run check style
      uses: nikitasavinov/checkstyle-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: 'github-check'
        tool_name: 'testtool'
        
  sca:
    name: SCA job Snyk
    runs-on: ubuntu-latest
    needs: checkstyle_job
    steps:
      - uses: actions/checkout@master
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk11@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
          
  sast:
    name: SAST job Sonarcloud
    runs-on: ubuntu-latest
    needs: checkstyle_job
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Change wrapper permissions
        run: chmod +x ./gradlew  
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube --info
        
  build:
    name: Build Docker image
    needs: [ sast, sca ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo code
      uses: actions/checkout@v2 
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build the Docker image
      run: | 
        docker build . --file Dockerfile --tag penyo/devops-u11:$GITHUB_SHA
        docker push penyo/devops-u11:$GITHUB_SHA
    - name: Scan image for vulnerabilities     
      uses: azure/container-scan@v0
      with: 
        image-name: penyo/devops-u11:${{ github.sha }}
      continue-on-error: true
      
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - run: echo "Deploy to DEV"
  
  notification_without_optional_params:
    needs: deploy-dev
    name: MS Teams Notification
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }} 
